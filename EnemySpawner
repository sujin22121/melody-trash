using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class EnemySpawner : MonoBehaviour
{
    [SerializeField]
    private GameObject[] enemies;  

    [SerializeField]
    private GameObject boss;
    private float[] arrPosX = {-2.2f, -1.1f, 0f, 1.1f, 2.2f};  //enemy 간격
    
    [SerializeField]
    private float spawnInterval = 1.5f;
    void Start()
    {
       StartEnemyRoutine();

        }
       
    
    void StartEnemyRoutine() {
        StartCoroutine("EnemyRoutine"); 
    }
    public void StopEnemyRoutine() {
        StopCoroutine("EnemyRoutine");

    }
    
    IEnumerator EnemyRoutine() {
        yield return new WaitForSeconds(3f);

        float moveSpeed = 5f;

        int spawnCount = 0;
        int enemyIndex = 0;

        while (true) {
            foreach (float posX in arrPosX) {
                
                SpawnEnemy(posX, enemyIndex, moveSpeed);
            }
            
            spawnCount += 1;
            if(spawnCount % 10 == 0) { // 10, 20, 30, ... 
                enemyIndex += 1; //enemy 레벨을 한 단계씩 높임
                moveSpeed += 2; // 스피드 빠르게 


            }

            if(enemyIndex >= enemies.Length) { // 이때 보스를 등장시킴
                SpawnBoss();
                enemyIndex = 0; //boss올 때 쉬운 단계 장애물로 바꿔줌
                moveSpeed = 5f;

            }

            yield return new WaitForSeconds(spawnInterval);

        }
    }


    void SpawnEnemy(float posX, int index, float moveSpeed) {
        Vector3 spawnPos = new Vector3(posX, transform.position.y, transform.position.z);

        if(Random.Range(0,5) == 0) {  //0에서 4사이 rondom숫자 뽑기 
            index += 1; // 20%의 확률로 다음의 index가 나타남
        }

        if(index > enemies.Length) {
            index = enemies.Length - 1;
        }

        GameObject enemyObject = Instantiate(enemies[index], spawnPos, Quaternion.identity);
        Enemy enemy = enemyObject.GetComponent<Enemy>();
        enemy.SetMoveSpeed(moveSpeed);
    }
    void SpawnBoss() { // boss
        Instantiate(boss, transform.position, Quaternion.identity); //boss가 위에서 등장함 
    }

}

    
